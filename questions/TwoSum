######qusetion:Two Sum

######question descript:
Given an array of integers, return indices of the two numbers such that they add up to a specific target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
Example:
Given nums = [2, 7, 11, 15], target = 9,
Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].

######42ms(other answer)
class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        d= {}
        for i, n in enumerate(nums):
            m = target - n
            if m in d:
                return [d[m], i]
            else:
                d[n] = i

######1265ms
class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        answer = []
        answer=[i for i, v in enumerate(nums) if v == target / 2]
        if len(answer) != 2:
            answer = []
            for num in nums:
                if (target-num) in nums:
                    if 2*num != target:
                        answer.append(nums.index(num))
                        answer.append(nums.index(target-num))
                        break
        return(answer)

######1649ms
class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        larges = []
        smalls = []
        answer = []
        n = 0
        for fit in nums:
            n = n + 1
            if fit == (target / 2):
                answer.append(n-1)
            if fit > (target / 2):
                larges.append(fit)
            if fit < (target / 2):
                smalls.append(fit)
        if len(answer) != 2:
            answer = []
            for large in larges:
                for small in smalls:
                    if (large + small) == target:
                        answer.append(nums.index(small))
                        answer.append(nums.index(large))
        return(answer)

######6012ms
class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        answer = []
        l = len(nums)
        i = 0
        n = 1
        while(i < l):
            for num in nums[1:]:
                if n == 0:
                    break
                if num + nums[0] == target:
                    answer.append(i)
                    nums = nums[1:]
                    answer.append(nums.index(num) + i + 1)
                    n = 0
                    break
            nums = nums[1:]
            i = i + 1
        return(answer)
